{"version":3,"file":"src_app_pages_apps_contacts_contacts-table_contacts-table_module_ts.js","mappings":"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","sources":["./src/app/pages/apps/contacts/contacts-table/contacts-data-table/contacts-data-table.component.ts","./src/app/pages/apps/contacts/contacts-table/contacts-data-table/contacts-data-table.component.html","./src/app/pages/apps/contacts/contacts-table/contacts-table-menu/contacts-table-menu.component.ts","./src/app/pages/apps/contacts/contacts-table/contacts-table-menu/contacts-table-menu.component.html","./src/app/pages/apps/contacts/contacts-table/contacts-table-routing.module.ts","./src/app/pages/apps/contacts/contacts-table/contacts-table.component.ts","./src/app/pages/apps/contacts/contacts-table/contacts-table.component.html","./src/app/pages/apps/contacts/contacts-table/contacts-table.module.ts"],"sourcesContent":["import { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { TableColumn } from '../../../../../../@vex/interfaces/table-column.interface';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\r\nimport { stagger20ms } from '../../../../../../@vex/animations/stagger.animation';\r\nimport { fadeInUp400ms } from '../../../../../../@vex/animations/fade-in-up.animation';\r\nimport { Contact } from '../../interfaces/contact.interface';\r\nimport { scaleFadeIn400ms } from '../../../../../../@vex/animations/scale-fade-in.animation';\r\n\r\n@Component({\r\n  selector: 'vex-contacts-data-table',\r\n  templateUrl: './contacts-data-table.component.html',\r\n  styleUrls: ['./contacts-data-table.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        appearance: 'standard'\r\n      } as MatFormFieldDefaultOptions\r\n    }\r\n  ],\r\n  animations: [\r\n    stagger20ms,\r\n    fadeInUp400ms,\r\n    scaleFadeIn400ms\r\n  ]\r\n})\r\nexport class ContactsDataTableComponent<T> implements OnInit, OnChanges, AfterViewInit {\r\n\r\n  @Input() data: T[];\r\n  @Input() columns: TableColumn<T>[];\r\n  @Input() pageSize = 20;\r\n  @Input() pageSizeOptions = [10, 20, 50];\r\n  @Input() searchStr: string;\r\n\r\n  @Output() toggleStar = new EventEmitter<Contact['id']>();\r\n  @Output() openContact = new EventEmitter<Contact['id']>();\r\n\r\n  visibleColumns: Array<keyof T | string>;\r\n  dataSource = new MatTableDataSource<T>();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.columns) {\r\n      this.visibleColumns = this.columns.map(column => column.property);\r\n    }\r\n\r\n    if (changes.data) {\r\n      this.dataSource.data = this.data;\r\n    }\r\n\r\n    if (changes.searchStr) {\r\n      this.dataSource.filter = (this.searchStr || '').trim().toLowerCase();\r\n    }\r\n  }\r\n\r\n  emitToggleStar(event: Event, id: Contact['id']) {\r\n    event.stopPropagation();\r\n    this.toggleStar.emit(id);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","<vex-scrollbar class=\"h-full relative\">\r\n  <div class=\"flex flex-col justify-between\">\r\n    <table [@stagger]=\"dataSource.filteredData\"\r\n           [dataSource]=\"dataSource\"\r\n           class=\"w-full flex-auto\"\r\n           mat-table\r\n           matSort>\r\n\r\n      <!--- Note that these columns can be defined in any order.\r\n            The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n      <!-- Model Properties Column -->\r\n      <ng-container *ngFor=\"let column of columns\">\r\n        <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"column.type === 'checkbox'\" [matColumnDef]=\"column.property\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n            <mat-checkbox (click)=\"$event.stopPropagation()\" [checked]=\"row[column.property]\"></mat-checkbox>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"column.type === 'image'\" [matColumnDef]=\"column.property\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n            <img [src]=\"row[column.property]\" class=\"avatar h-9 w-9 align-middle my-2\">\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"column.type === 'button'\" [matColumnDef]=\"column.property\">\r\n          <ng-container *ngIf=\"column.property === 'starred'\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" class=\"w-10\" mat-cell>\r\n              <button (click)=\"emitToggleStar($event, row.id)\" mat-icon-button type=\"button\">\r\n                <mat-icon *ngIf=\"row[column.property]\" class=\"text-amber\" svgIcon=\"mat:star\"></mat-icon>\r\n                <mat-icon *ngIf=\"!row[column.property]\" svgIcon=\"mat:star_border\"></mat-icon>\r\n              </button>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"column.property === 'menu'\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" class=\"w-10\" mat-cell>\r\n              <button (click)=\"$event.stopPropagation()\"\r\n                      [matMenuTriggerFor]=\"contactMenu\"\r\n                      mat-icon-button\r\n                      type=\"button\">\r\n                <mat-icon svgIcon=\"mat:more_vert\"></mat-icon>\r\n              </button>\r\n            </td>\r\n          </ng-container>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n\r\n      <tr *matHeaderRowDef=\"visibleColumns; sticky: true\" mat-header-row></tr>\r\n      <!--suppress UnnecessaryLabelJS -->\r\n      <tr (click)=\"openContact.emit(row.id)\"\r\n          *matRowDef=\"let row; columns: visibleColumns;\"\r\n          @fadeInUp\r\n          class=\"hover:bg-hover cursor-pointer\"\r\n          mat-row></tr>\r\n    </table>\r\n\r\n    <div *ngIf=\"dataSource.filteredData.length === 0\"\r\n         @scaleFadeIn\r\n         class=\"flex-auto flex flex-col items-center justify-center\">\r\n      <img class=\"m-12 h-64\" src=\"assets/img/illustrations/idea.svg\">\r\n      <h2 class=\"headline m-0 text-center\">No contacts matching your filters</h2>\r\n    </div>\r\n\r\n    <mat-paginator [class.hidden]=\"dataSource.filteredData.length === 0\"\r\n                   [pageSize]=\"pageSize\"\r\n                   [pageSizeOptions]=\"pageSizeOptions\"\r\n                   class=\"sticky bottom-0 left-0 right-0 border-t flex-none\"></mat-paginator>\r\n  </div>\r\n</vex-scrollbar>\r\n\r\n<mat-menu #contactMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button mat-menu-item>\r\n    <mat-icon svgIcon=\"mat:edit\"></mat-icon>\r\n    <span>Edit Contact</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon svgIcon=\"mat:delete_forever\"></mat-icon>\r\n    <span>Delete Contact</span>\r\n  </button>\r\n</mat-menu>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { contactsData } from '../../../../../../static-data/contacts';\r\nimport { Contact } from '../../interfaces/contact.interface';\r\nimport { fadeInRight400ms } from '../../../../../../@vex/animations/fade-in-right.animation';\r\nimport { stagger40ms } from '../../../../../../@vex/animations/stagger.animation';\r\n\r\nexport interface ContactsTableMenu {\r\n  type: 'link' | 'subheading';\r\n  id?: 'frequently' | 'starred' | 'all' | 'family' | 'friends' | 'colleagues' | 'business';\r\n  icon?: string;\r\n  label: string;\r\n  classes?: {\r\n    icon?: string;\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'vex-contacts-table-menu',\r\n  templateUrl: './contacts-table-menu.component.html',\r\n  animations: [fadeInRight400ms, stagger40ms]\r\n})\r\nexport class ContactsTableMenuComponent implements OnInit {\r\n\r\n  @Input() items: ContactsTableMenu[] = [\r\n    {\r\n      type: 'link',\r\n      id: 'all',\r\n      icon: 'mat:view_headline',\r\n      label: 'All Contacts'\r\n    },\r\n    {\r\n      type: 'link',\r\n      id: 'frequently',\r\n      icon: 'mat:history',\r\n      label: 'Frequently contacted'\r\n    },\r\n    {\r\n      type: 'link',\r\n      id: 'starred',\r\n      icon: 'mat:star',\r\n      label: 'Starred'\r\n    },\r\n    {\r\n      type: 'subheading',\r\n      label: 'Labels'\r\n    },\r\n    {\r\n      type: 'link',\r\n      id: 'family',\r\n      icon: 'mat:label',\r\n      label: 'Family',\r\n      classes: {\r\n        icon: 'text-primary'\r\n      }\r\n    },\r\n    {\r\n      type: 'link',\r\n      id: 'friends',\r\n      icon: 'mat:label',\r\n      label: 'Friends',\r\n      classes: {\r\n        icon: 'text-green'\r\n      }\r\n    },\r\n    {\r\n      type: 'link',\r\n      id: 'colleagues',\r\n      icon: 'mat:label',\r\n      label: 'Colleagues',\r\n      classes: {\r\n        icon: 'text-amber'\r\n      }\r\n    },\r\n    {\r\n      type: 'link',\r\n      id: 'business',\r\n      icon: 'mat:label',\r\n      label: 'Business',\r\n      classes: {\r\n        icon: 'text-gray'\r\n      }\r\n    },\r\n  ];\r\n\r\n  @Output() filterChange = new EventEmitter<Contact[]>();\r\n  @Output() openAddNew = new EventEmitter<void>();\r\n\r\n  activeCategory: ContactsTableMenu['id'] = 'all';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setFilter(category: ContactsTableMenu['id']) {\r\n    this.activeCategory = category;\r\n\r\n    if (category === 'starred') {\r\n      return this.filterChange.emit(contactsData.filter(c => c.starred));\r\n    }\r\n\r\n    if (category === 'all') {\r\n      return this.filterChange.emit(contactsData);\r\n    }\r\n\r\n    if (category === 'frequently'\r\n      || category === 'family'\r\n      || category === 'friends'\r\n      || category === 'colleagues'\r\n      || category === 'business') {\r\n      return this.filterChange.emit([]);\r\n    }\r\n  }\r\n\r\n  isActive(category: ContactsTableMenu['id']) {\r\n    return this.activeCategory === category;\r\n  }\r\n}\r\n","<div @stagger class=\"max-w-3xs w-full\">\r\n  <div class=\"h-14 mb-6 flex px-gutter sm:px-0 flex items-center\">\r\n    <button (click)=\"openAddNew.emit()\" class=\"flex-auto\" color=\"primary\" mat-raised-button type=\"button\">\r\n      <mat-icon class=\"ltr:-ml-4 ltr:mr-2 rtl:ml-2 icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n      <span>Add Contact</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"px-gutter sm:px-0\">\r\n    <ng-container *ngFor=\"let item of items\">\r\n      <a (click)=\"setFilter(item.id)\"\r\n         *ngIf=\"item.type === 'link'\"\r\n         @fadeInRight\r\n         [ngClass]=\"{ 'bg-primary/10 text-primary': isActive(item.id) }\"\r\n         class=\"rounded h-10 px-4 cursor-pointer hover:bg-primary/10 mt-1 font-medium flex items-center transition duration-200 ease-out\"\r\n         matRipple>\r\n        <mat-icon [ngClass]=\"item.classes?.icon\" [svgIcon]=\"item.icon\" class=\"ltr:mr-3 rtl:ml-3\"></mat-icon>\r\n        <span>{{ item.label }}</span>\r\n      </a>\r\n\r\n      <h3 *ngIf=\"item.type === 'subheading'\"\r\n          @fadeInRight\r\n          class=\"caption text-secondary font-medium mb-0 mt-6\">{{ item.label }}</h3>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\nimport { ContactsTableComponent } from './contacts-table.component';\r\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\r\n\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: ContactsTableComponent,\r\n    data: {\r\n      scrollDisabled: true,\r\n      toolbarShadowEnabled: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule, QuicklinkModule]\r\n})\r\nexport class ContactsTableRoutingModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { scaleIn400ms } from '../../../../../@vex/animations/scale-in.animation';\r\nimport { fadeInRight400ms } from '../../../../../@vex/animations/fade-in-right.animation';\r\nimport { TableColumn } from '../../../../../@vex/interfaces/table-column.interface';\r\nimport { contactsData } from '../../../../../static-data/contacts';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { stagger40ms } from '../../../../../@vex/animations/stagger.animation';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ContactsEditComponent } from '../components/contacts-edit/contacts-edit.component';\r\nimport { Contact } from '../interfaces/contact.interface';\r\n\r\n@Component({\r\n  selector: 'vex-contacts-table',\r\n  templateUrl: './contacts-table.component.html',\r\n  animations: [\r\n    stagger40ms,\r\n    scaleIn400ms,\r\n    fadeInRight400ms\r\n  ],\r\n  styles: [`\r\n    .mat-drawer-container {\r\n      background: transparent !important;\r\n    }\r\n  `]\r\n})\r\nexport class ContactsTableComponent implements OnInit {\r\n\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n  searchStr$ = this.searchCtrl.valueChanges.pipe(\r\n    debounceTime(10)\r\n  );\r\n\r\n  menuOpen = false;\r\n\r\n  activeCategory: 'frequently' | 'starred' | 'all' | 'family' | 'friends' | 'colleagues' | 'business' = 'all';\r\n  tableData = contactsData;\r\n  tableColumns: TableColumn<Contact>[] = [\r\n    {\r\n      label: '',\r\n      property: 'selected',\r\n      type: 'checkbox',\r\n      cssClasses: ['w-6']\r\n    },\r\n    {\r\n      label: '',\r\n      property: 'imageSrc',\r\n      type: 'image',\r\n      cssClasses: ['min-w-9']\r\n    },\r\n    {\r\n      label: 'NAME',\r\n      property: 'name',\r\n      type: 'text',\r\n      cssClasses: ['font-medium']\r\n    },\r\n    {\r\n      label: 'EMAIL',\r\n      property: 'email',\r\n      type: 'text',\r\n      cssClasses: ['text-secondary']\r\n    },\r\n    {\r\n      label: 'PHONE',\r\n      property: 'phone',\r\n      type: 'text',\r\n      cssClasses: ['text-secondary']\r\n    },\r\n    {\r\n      label: '',\r\n      property: 'starred',\r\n      type: 'button',\r\n      cssClasses: ['text-secondary', 'w-10']\r\n    },\r\n    {\r\n      label: '',\r\n      property: 'menu',\r\n      type: 'button',\r\n      cssClasses: ['text-secondary', 'w-10']\r\n    },\r\n  ];\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openContact(id?: Contact['id']) {\r\n    this.dialog.open(ContactsEditComponent, {\r\n      data: id || null,\r\n      width: '600px'\r\n    });\r\n  }\r\n\r\n  toggleStar(id: Contact['id']) {\r\n    const contact = this.tableData.find(c => c.id === id);\r\n\r\n    if (contact) {\r\n      contact.starred = !contact.starred;\r\n    }\r\n  }\r\n\r\n  setData(data: Contact[]) {\r\n    this.tableData = data;\r\n    this.menuOpen = false;\r\n  }\r\n\r\n  openMenu() {\r\n    this.menuOpen = true;\r\n  }\r\n}\r\n","<div class=\"w-full h-full flex flex-col\">\r\n  <div class=\"px-gutter pt-6 pb-20 bg-primary/10 flex-none\">\r\n    <div class=\"flex items-center container px-0\">\r\n      <button (click)=\"openMenu()\" @scaleIn class=\"sm:hidden text-primary-contrast\" mat-icon-button type=\"button\">\r\n        <mat-icon svgIcon=\"mat:menu\"></mat-icon>\r\n      </button>\r\n      <h2 class=\"display-1 font-bold m-0 flex items-center w-full max-w-3xs mr-6\">\r\n        <span @scaleIn\r\n              class=\"w-12 h-12 rounded-full text-primary ltr:mr-4 rtl:ml-4 bg-primary/10 hidden sm:flex items-center justify-center\">\r\n          <mat-icon svgIcon=\"mat:contacts\"></mat-icon>\r\n        </span>\r\n        <span @fadeInRight class=\"block\">Contacts</span>\r\n      </h2>\r\n\r\n      <div class=\"hidden sm:flex items-center bg-foreground rounded-full overflow-hidden relative ltr:pl-5 rtl:pr-5 h-12 max-w-md w-full shadow-xl mx-auto\">\r\n        <mat-icon class=\"text-secondary flex-none\" svgIcon=\"mat:search\"></mat-icon>\r\n        <input [formControl]=\"searchCtrl\"\r\n               class=\"border-0 h-12 outline-none ltr:pl-4 rtl:pr-4 placeholder:text-secondary bg-foreground flex-auto\"\r\n               placeholder=\"Search Contacts...\"\r\n               type=\"text\"/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"-mt-14 pt-0 overflow-hidden flex-1 flex container px-0\">\r\n\r\n    <mat-drawer-container class=\"bg-transparent flex-auto flex\">\r\n      <mat-drawer [(opened)]=\"menuOpen\" mode=\"over\">\r\n        <vex-contacts-table-menu (filterChange)=\"setData($event)\"\r\n                                 (openAddNew)=\"openContact()\"\r\n                                 class=\"sm:hidden\"></vex-contacts-table-menu>\r\n      </mat-drawer>\r\n      <mat-drawer-content class=\"p-gutter pt-0 flex-auto flex items-start\">\r\n        <vex-contacts-table-menu (filterChange)=\"setData($event)\"\r\n                                 (openAddNew)=\"openContact()\"\r\n                                 class=\"hidden sm:block ltr:mr-6 rtl:ml-6\"></vex-contacts-table-menu>\r\n\r\n        <div class=\"card h-full overflow-hidden flex-auto\">\r\n          <vex-contacts-data-table (openContact)=\"openContact($event)\"\r\n                                   (toggleStar)=\"toggleStar($event)\"\r\n                                   [columns]=\"tableColumns\"\r\n                                   [data]=\"tableData\"\r\n                                   [searchStr]=\"searchStr$ | async\"></vex-contacts-data-table>\r\n        </div>\r\n      </mat-drawer-content>\r\n\r\n    </mat-drawer-container>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ContactsTableRoutingModule } from './contacts-table-routing.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ScrollbarModule } from '../../../../../@vex/components/scrollbar/scrollbar.module';\r\nimport { ContactsTableComponent } from './contacts-table.component';\r\nimport { ContactsDataTableComponent } from './contacts-data-table/contacts-data-table.component';\r\nimport { ContactsEditModule } from '../components/contacts-edit/contacts-edit.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ContactsTableMenuComponent } from './contacts-table-menu/contacts-table-menu.component';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ContactsTableComponent, ContactsDataTableComponent, ContactsTableMenuComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ContactsTableRoutingModule,\r\n\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatRippleModule,\r\n    MatDialogModule,\r\n    ScrollbarModule,\r\n    ContactsEditModule,\r\n    ReactiveFormsModule,\r\n    MatSidenavModule\r\n  ]\r\n})\r\nexport class ContactsTableModule {\r\n}\r\n"],"names":["scaleIn400ms","fadeInRight400ms","contactsData","UntypedFormControl","debounceTime","stagger40ms","ContactsEditComponent","ContactsTableComponent","constructor","dialog","searchCtrl","valueChanges","pipe","label","property","type","cssClasses","ngOnInit","openContact","id","open","data","width","toggleStar","contact","tableData","find","c","starred","setData","menuOpen","openMenu","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}