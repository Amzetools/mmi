{"version":3,"file":"default-src_app_pages_ui_components_components-overview_components_components-overview-autoco-7372e2.js","mappings":"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","sources":["./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { CountryState } from '../../../../forms/form-elements/form-elements.component';\r\n\r\n@Component({\r\n  selector: 'vex-components-overview-autocomplete',\r\n  templateUrl: './components-overview-autocomplete.component.html',\r\n  styleUrls: ['./components-overview-autocomplete.component.scss']\r\n})\r\nexport class ComponentsOverviewAutocompleteComponent implements OnInit {\r\n\r\n  autocompleteHTML =\r\n    `<mat-input-container>\r\n  <mat-label>State</mat-label>\r\n  <input type=\"text\" matInput [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\r\n  <mat-autocomplete #auto=\"matAutocomplete\">\r\n    <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n      {{ option }}\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n</mat-input-container>\r\n`;\r\n\r\n  stateCtrl: UntypedFormControl;\r\n  filteredStates$: Observable<CountryState[]>;\r\n\r\n  states: CountryState[] = [\r\n    {\r\n      name: 'Arkansas',\r\n      population: '2.978M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n    },\r\n    {\r\n      name: 'California',\r\n      population: '39.14M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n    },\r\n    {\r\n      name: 'Florida',\r\n      population: '20.27M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n    },\r\n    {\r\n      name: 'Texas',\r\n      population: '27.47M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n    }\r\n  ];\r\n\r\n  ngOnInit() {\r\n    this.stateCtrl = new UntypedFormControl();\r\n    this.filteredStates$ = this.stateCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(state => state ? this.filterStates(state) : this.states.slice())\r\n    );\r\n  }\r\n\r\n  filterStates(name: string) {\r\n    return this.states.filter(state =>\r\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n}\r\n","<div class=\"card flex flex-col sm:flex-row\">\r\n  <div class=\"p-6 flex-none\">\r\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\r\n\r\n    <mat-form-field class=\"w-300 max-w-full\">\r\n      <mat-label>Select a State</mat-label>\r\n      <input [formControl]=\"stateCtrl\" [matAutocomplete]=\"auto\" matInput>\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let state of filteredStates$ | async\" [value]=\"state.name\">\r\n          <img [src]=\"state.flag\" class=\"align-middle mr-4 shadow-lg h-6 inline-block\">\r\n          <span class=\"body-1\">{{ state.name }}</span>\r\n          <span class=\"text-hint\"> | </span>\r\n          <span class=\"caption text-secondary\">Population: {{ state.population }}</span>\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n      <button (click)=\"stateCtrl.reset()\" *ngIf=\"stateCtrl.value\" mat-icon-button matSuffix type=\"button\">\r\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n      </button>\r\n      <button *ngIf=\"!stateCtrl.value\" mat-icon-button matSuffix type=\"button\">\r\n        <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n      </button>\r\n      <mat-hint>Add this hint for a better UX!</mat-hint>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"border-l flex-auto\">\r\n    <div class=\"p-6\">\r\n      <h2 class=\"title mt-0 mb-4\">Autocomplete</h2>\r\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-autocomplete&gt;</h4>\r\n    </div>\r\n\r\n    <mat-tab-group class=\"vex-tabs\">\r\n      <mat-tab label=\"DESCRIPTION\">\r\n        <div class=\"p-6\">\r\n          <p class=\"m-0\">\r\n            Input text can be used with autocomplete to help users who have limited literacy or who write in a foreign\r\n            language.\r\n            <br>\r\n            <br><span class=\"font-medium\">For example, autocomplete can:</span>\r\n          </p>\r\n          <ul>\r\n            <li>Suggest input as itâ€™s typed (refreshing suggestions with each keystroke)</li>\r\n            <li>Fill a field with default input text</li>\r\n            <li>Pressing the return button accepts the current autocomplete suggestion.</li>\r\n          </ul>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"SOURCE CODE\">\r\n        <pre><code [vexHighlight]=\"autocompleteHTML\"></code></pre>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsOverviewAutocompleteComponent } from './components-overview-autocomplete.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HighlightModule } from '../../../../../../../@vex/components/highlight/highlight.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ComponentsOverviewAutocompleteComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    ReactiveFormsModule,\r\n    HighlightModule,\r\n  ],\r\n  exports: [ComponentsOverviewAutocompleteComponent]\r\n})\r\nexport class ComponentsOverviewAutocompleteModule {\r\n}\r\n"],"names":["UntypedFormControl","map","startWith","i0","ComponentsOverviewAutocompleteComponent","constructor","name","population","flag","ngOnInit","stateCtrl","filteredStates$","valueChanges","pipe","state","filterStates","states","slice","filter","toLowerCase","indexOf","selectors","decls","vars","consts","template","_r0"],"sourceRoot":"webpack:///"}