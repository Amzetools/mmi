{"version":3,"file":"src_app_admin_admin-dashboard_admin-dashboard_admin-dashboard_module_ts.js","mappings":"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","sources":["./src/app/admin/admin-dashboard/admin-dashboard/admin-dashboard-routing.module.ts","./src/app/admin/admin-dashboard/admin-dashboard/admin-dashboard.component.ts","./src/app/admin/admin-dashboard/admin-dashboard/admin-dashboard.component.html","./src/app/admin/admin-dashboard/admin-dashboard/admin-dashboard.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\nimport { AdminDashboardComponent } from './admin-dashboard.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminDashboardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule, QuicklinkModule]\r\n})\r\nexport class AdminDashboardRoutingModule {\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { defaultChartOptions } from '../../../../@vex/utils/default-chart-options';\r\nimport { Order, tableSalesData } from '../../../../static-data/table-sales-data';\r\nimport { TableColumn } from '../../../../@vex/interfaces/table-column.interface';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { untilDestroyed } from '@ngneat/until-destroy';\r\nimport { ReplaySubject, Observable, of, filter } from 'rxjs';\r\nimport { aioTableLabels, aioTableData } from 'src/static-data/aio-table-data';\r\nimport { CustomerCreateUpdateComponent } from '../../../pages/apps/aio-table/customer-create-update/customer-create-update.component';\r\nimport { Customer } from '../../../pages/apps/aio-table/interfaces/customer.model';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\r\nimport { fadeInUp400ms } from 'src/@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from 'src/@vex/animations/stagger.animation';\r\n\r\n\r\n@Component({\r\n  selector: 'vex-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.scss'],\r\n  animations: [\r\n    fadeInUp400ms,\r\n    stagger40ms\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        appearance: 'standard'\r\n      } as MatFormFieldDefaultOptions\r\n    }\r\n  ]\r\n})\r\nexport class AdminDashboardComponent {\r\n\r\n  // tableColumns: TableColumn<Order>[] = [\r\n  //   {\r\n  //     label: '',\r\n  //     property: 'status',\r\n  //     type: 'badge'\r\n  //   },\r\n  //   {\r\n  //     label: 'PRODUCT',\r\n  //     property: 'name',\r\n  //     type: 'text'\r\n  //   },\r\n  //   {\r\n  //     label: '$ PRICE',\r\n  //     property: 'price',\r\n  //     type: 'text',\r\n  //     cssClasses: ['font-medium']\r\n  //   },\r\n  //   {\r\n  //     label: 'DATE',\r\n  //     property: 'timestamp',\r\n  //     type: 'text',\r\n  //     cssClasses: ['text-secondary']\r\n  //   }\r\n  // ];\r\n  // tableData = tableSalesData;\r\n\r\n  series: ApexAxisChartSeries = [{\r\n    name: 'Subscribers',\r\n    data: [28, 40, 36, 0, 52, 38, 60, 55, 67, 33, 89, 44]\r\n  }];\r\n\r\n  userSessionsSeries: ApexAxisChartSeries = [\r\n    {\r\n      name: 'Users',\r\n      data: [10, 50, 26, 50, 38, 60, 50, 25, 61, 80, 40, 60]\r\n    },\r\n    {\r\n      name: 'Sessions',\r\n      data: [5, 21, 42, 70, 41, 20, 35, 50, 10, 15, 30, 50]\r\n    },\r\n  ];\r\n\r\n  salesSeries: ApexAxisChartSeries = [{\r\n    name: 'Sales',\r\n    data: [28, 40, 36, 0, 52, 38, 60, 55, 99, 54, 38, 87]\r\n  }];\r\n\r\n  pageViewsSeries: ApexAxisChartSeries = [{\r\n    name: 'Page Views',\r\n    data: [405, 800, 200, 600, 105, 788, 600, 204]\r\n  }];\r\n\r\n  uniqueUsersSeries: ApexAxisChartSeries = [{\r\n    name: 'Unique Users',\r\n    data: [356, 806, 600, 754, 432, 854, 555, 1004]\r\n  }];\r\n\r\n  uniqueUsersOptions = defaultChartOptions({\r\n    chart: {\r\n      type: 'area',\r\n      height: 100\r\n    },\r\n    colors: ['#ff9800']\r\n  });\r\n  // dialog: any;\r\n  // customers: any;\r\n  // subject$: any;\r\n  // selection: any;\r\n  // dataSource: any;\r\n\r\n\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<Customer[]> = new ReplaySubject<Customer[]>(1);\r\n  data$: Observable<Customer[]> = this.subject$.asObservable();\r\n  customers: Customer[];\r\n\r\n  @Input()\r\n  columns: TableColumn<Customer>[] = [\r\n    { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\r\n    { label: 'Image', property: 'image', type: 'image', visible: true },\r\n    { label: 'SKU', property: 'sku', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Description', property: 'description', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Category', property: 'category', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Name', property: 'name', type: 'text', visible: false, cssClasses: ['font-medium'] },\r\n    { label: 'First Name', property: 'firstName', type: 'text', visible: false },\r\n    { label: 'Last Name', property: 'lastName', type: 'text', visible: false },\r\n    { label: 'Contact', property: 'contact', type: 'button', visible: false },\r\n    { label: 'Address', property: 'address', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Street', property: 'street', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Zipcode', property: 'zipcode', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'City', property: 'city', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Phone', property: 'phoneNumber', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Labels', property: 'labels', type: 'button', visible: true },\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource: MatTableDataSource<Customer> | null;\r\n  selection = new SelectionModel<Customer>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n  labels = aioTableLabels;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  get visibleColumns() {\r\n    return this.columns.filter(column => column.visible).map(column => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n  getData() {\r\n    return of(aioTableData.map(customer => new Customer(customer)));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData().subscribe(customers => {\r\n      this.subject$.next(customers);\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(\r\n      filter<Customer[]>(Boolean)\r\n    ).subscribe(customers => {\r\n      this.customers = customers;\r\n      this.dataSource.data = customers;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges.pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(value => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  createCustomer() {\r\n    this.dialog.open(CustomerCreateUpdateComponent).afterClosed().subscribe((customer: Customer) => {\r\n      /**\r\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\r\n       */\r\n      if (customer) {\r\n        /**\r\n         * Here we are updating our local array.\r\n         * You would probably make an HTTP request here.\r\n         */\r\n        this.customers.unshift(new Customer(customer));\r\n        this.subject$.next(this.customers);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateCustomer(customer: Customer) {\r\n    this.dialog.open(CustomerCreateUpdateComponent, {\r\n      data: customer\r\n    }).afterClosed().subscribe(updatedCustomer => {\r\n      /**\r\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\r\n       */\r\n      if (updatedCustomer) {\r\n        /**\r\n         * Here we are updating our local array.\r\n         * You would probably make an HTTP request here.\r\n         */\r\n        const index = this.customers.findIndex((existingCustomer) => existingCustomer.id === updatedCustomer.id);\r\n        this.customers[index] = new Customer(updatedCustomer);\r\n        this.subject$.next(this.customers);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCustomer(customer: Customer) {\r\n    /**\r\n     * Here we are updating our local array.\r\n     * You would probably make an HTTP request here.\r\n     */\r\n    this.customers.splice(this.customers.findIndex((existingCustomer) => existingCustomer.id === customer.id), 1);\r\n    this.selection.deselect(customer);\r\n    this.subject$.next(this.customers);\r\n  }\r\n\r\n  deleteCustomers(customers: Customer[]) {\r\n    /**\r\n     * Here we are updating our local array.\r\n     * You would probably make an HTTP request here.\r\n     */\r\n    customers.forEach(c => this.deleteCustomer(c));\r\n  }\r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column, event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: Customer) {\r\n    const index = this.customers.findIndex(c => c === row);\r\n    this.customers[index].labels = change.value;\r\n    this.subject$.next(this.customers);\r\n  }\r\n\r\n}\r\n\r\n","<vex-secondary-toolbar current=\"Dashboard\">\r\n    <vex-breadcrumbs [crumbs]=\"['Dashboards', 'Analytics']\" class=\"flex-auto\"></vex-breadcrumbs>\r\n  \r\n    <button class=\"ml-2\" color=\"primary\" mat-icon-button type=\"button\">\r\n      <mat-icon svgIcon=\"mat:more_vert\"></mat-icon>\r\n    </button>\r\n  </vex-secondary-toolbar>\r\n  \r\n  <div class=\"container p-gutter grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\r\n\r\n    <vex-widget-assistant class=\"sm:col-span-2\"></vex-widget-assistant>\r\n  \r\n    <vex-widget-quick-line-chart icon=\"mat:pageview\"\r\n                                 [series]=\"pageViewsSeries\"\r\n                                 iconClass=\"text-primary bg-primary/10\"\r\n                                 label=\"New Customer Ratio\"\r\n                                 value=\"92.4%\"></vex-widget-quick-line-chart>\r\n  \r\n    <vex-widget-quick-line-chart icon=\"mat:group\"\r\n                                 [options]=\"uniqueUsersOptions\"\r\n                                 [series]=\"uniqueUsersSeries\"\r\n                                 iconClass=\"text-orange bg-orange-light\"\r\n                                 label=\"New Products Ratio\"\r\n                                 value=\"67.2%\"></vex-widget-quick-line-chart>\r\n\r\n  \r\n    <vex-widget-quick-value-center [change]=\"124.4\" icon=\"mat:shopping_cart\" iconClass=\"text-primary bg-primary/10\" label=\"Orders\"\r\n      value=\"67.4k\"></vex-widget-quick-value-center>\r\n    <vex-widget-quick-value-center [change]=\"-23.7\" icon=\"mat:new_releases\" iconClass=\"text-orange bg-orange-light\"\r\n     label=\"Release\" value=\"96.2k\"></vex-widget-quick-value-center>\r\n    <vex-widget-quick-value-center [change]=\"23.2\" icon=\"mat:card_giftcard\" iconClass=\"text-deep-orange bg-deep-orange-light\"\r\n     label=\"Products\" value=\"6.92%\"></vex-widget-quick-value-center>\r\n    <vex-widget-quick-value-center [change]=\"34.5\" icon=\"mat:all_inclusive\" iconClass=\"text-teal bg-teal-light\"\r\n      label=\"Inventory\" value=\"6.92%\"></vex-widget-quick-value-center>\r\n  \r\n      <!-- <vex-widget-large-goal-chart [series]=\"salesSeries\" class=\"sm:col-span-full\" total=\"4,374\">\r\n    </vex-widget-large-goal-chart>\r\n \r\n    <vex-widget-large-chart [series]=\"userSessionsSeries\" class=\"sm:col-span-full\"></vex-widget-large-chart> -->\r\n  \r\n    <div class=\"card sm:col-span-full\">\r\n      <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n        <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n          <span>All Products</span>\r\n        </h2>\r\n        <div class=\"bg-foreground rounded-full border px-4 max-w-[300px] flex-auto flex items-center border border-gray-300\">\r\n          <mat-icon class=\"icon-sm text-secondary\" svgIcon=\"mat:search\"></mat-icon>\r\n          <input [formControl]=\"searchCtrl\"\r\n                 class=\"px-4 py-2 border-0 outline-none w-full bg-transparent\"\r\n                 placeholder=\"Search...\"\r\n                 type=\"search\">\r\n        </div>\r\n        <span class=\"flex-1\"></span>\r\n      </div>\r\n  \r\n      <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\r\n  \r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n  \r\n        <!-- Checkbox Column -->\r\n        <ng-container matColumnDef=\"checkbox\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </th>\r\n          <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n            <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\r\n                          \r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container>\r\n  \r\n        <!-- Image Column -->\r\n        <ng-container matColumnDef=\"image\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Image</th>\r\n          <td *matCellDef=\"let row\" class=\"w-8 min-w-8 pr-0\" mat-cell>\r\n            <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\">\r\n          </td>\r\n        </ng-container>\r\n  \r\n        <!-- Text Columns -->\r\n        <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n          <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\r\n            <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\r\n          </ng-container>\r\n        </ng-container>\r\n  \r\n        <!-- Contact Column -->\r\n        <ng-container matColumnDef=\"contact\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div class=\"flex\">\r\n              <a \r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary/10\"\r\n                 mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n              </a>\r\n  \r\n              <a \r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal-light\"\r\n                 mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n              </a>\r\n  \r\n              <a \r\n                 class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green-light\"\r\n                 mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n  \r\n        <!-- Label Column -->\r\n        <ng-container matColumnDef=\"labels\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Labels</th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div  class=\"flex items-center gap-1\">\r\n              <div *ngFor=\"let label of row.labels\"\r\n                   [ngClass]=\"[label.textClass, label.bgClass]\"\r\n                   class=\"rounded px-2 py-1 font-medium text-xs flex-none\">\r\n                {{ label.text }}\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n  \r\n        <!-- Action Column -->\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header>Options</th>\r\n          <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n            <button \r\n                    [matMenuTriggerData]=\"{ customer: row }\"\r\n                    [matMenuTriggerFor]=\"actionsMenu\"\r\n                    mat-icon-button\r\n                    type=\"button\">\r\n              <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n  \r\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n        <tr *matRowDef=\"let row; columns: visibleColumns;\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover trans-ease-out cursor-pointer\"\r\n            mat-row></tr>\r\n            <!--- Note: Will use the below Line to view product details in the above <tr>\" -->\r\n            <!-- (click)=\"updateCustomer(row)\" -->\r\n      </table>\r\n  \r\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\r\n    </div>\r\n    \r\n    <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n      <ng-template let-customer=\"customer\" matMenuContent>\r\n        <button mat-menu-item>\r\n          <mat-icon svgIcon=\"mat:find_replace\"></mat-icon>\r\n          <span>View</span>\r\n        </button>\r\n        <button (click)=\"updateCustomer(customer)\" mat-menu-item>\r\n          <mat-icon svgIcon=\"mat:edit\"></mat-icon>\r\n          <span>Release</span>\r\n        </button>\r\n        <button (click)=\"deleteCustomer(customer)\" mat-menu-item>\r\n          <mat-icon svgIcon=\"mat:delete\"></mat-icon>\r\n          <span>Order</span>\r\n        </button>\r\n      </ng-template>\r\n    </mat-menu>\r\n      \r\n  \r\n    \r\n  \r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminDashboardRoutingModule } from './admin-dashboard-routing.module';\r\nimport { AdminDashboardComponent } from './admin-dashboard.component';\r\nimport { ChartModule } from '../../../../@vex/components/chart/chart.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { WidgetQuickLineChartModule } from '../../../../@vex/components/widgets/widget-quick-line-chart/widget-quick-line-chart.module';\r\nimport {\r\n  WidgetQuickValueCenterModule\r\n} from '../../../../@vex/components/widgets/widget-quick-value-center/widget-quick-value-center.module';\r\nimport { WidgetQuickValueStartModule } from '../../../../@vex/components/widgets/widget-quick-value-start/widget-quick-value-start.module';\r\nimport { WidgetLargeGoalChartModule } from '../../../../@vex/components/widgets/widget-large-goal-chart/widget-large-goal-chart.module';\r\nimport { WidgetAssistantModule } from '../../../../@vex/components/widgets/widget-assistant/widget-assistant.module';\r\nimport { WidgetLargeChartModule } from '../../../../@vex/components/widgets/widget-large-chart/widget-large-chart.module';\r\nimport { WidgetTableModule } from '../../../../@vex/components/widgets/widget-table/widget-table.module';\r\nimport { SecondaryToolbarModule } from '../../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\r\nimport { BreadcrumbsModule } from '../../../../@vex/components/breadcrumbs/breadcrumbs.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { PageLayoutModule } from '../../../../@vex/components/page-layout/page-layout.module';\r\n\r\nimport { AioTableRoutingModule } from '../../../pages/apps/aio-table/aio-table-routing.module';\r\n// import { AioTableComponent } from '../../apps/aio-table/aio-table.component';\r\nimport { CustomerCreateUpdateModule } from '../../../pages/apps/aio-table/customer-create-update/customer-create-update.module';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AdminDashboardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AdminDashboardRoutingModule,\r\n    ChartModule,\r\n    MatIconModule,\r\n    WidgetQuickLineChartModule,\r\n    WidgetQuickValueCenterModule,\r\n    WidgetQuickValueStartModule,\r\n    WidgetLargeGoalChartModule,\r\n\r\n    WidgetAssistantModule,\r\n    WidgetLargeChartModule,\r\n    WidgetTableModule,\r\n    SecondaryToolbarModule,\r\n    BreadcrumbsModule,\r\n    MatButtonModule,\r\n    PageLayoutModule,\r\n\r\n    AioTableRoutingModule,\r\n    PageLayoutModule,\r\n    BreadcrumbsModule,\r\n    CustomerCreateUpdateModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n\r\n    FormsModule,\r\n    MatTooltipModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatSliderModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatSlideToggleModule,\r\n    SecondaryToolbarModule,\r\n    BreadcrumbsModule,\r\n  ]\r\n})\r\nexport class AdminDashboardModule {\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}