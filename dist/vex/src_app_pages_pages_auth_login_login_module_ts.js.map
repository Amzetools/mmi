{"version":3,"file":"src_app_pages_pages_auth_login_login_module_ts.js","mappings":"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","sources":["./src/@vex/animations/fade-in-up.animation.ts","./src/app/pages/pages/auth/login/login-routing.module.ts","./src/app/pages/pages/auth/login/login.component.ts","./src/app/pages/pages/auth/login/login.component.html","./src/app/pages/pages/auth/login/login.module.ts","./src/app/services/auth.service.ts"],"sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\nimport { LoginComponent } from './login.component';\r\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\r\n\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule, QuicklinkModule]\r\n})\r\nexport class LoginRoutingModule {\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { fadeInUp400ms } from \"../../../../../@vex/animations/fade-in-up.animation\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\n\r\n@Component({\r\n  selector: \"vex-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [fadeInUp400ms],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: UntypedFormGroup;\r\n  userName: string;\r\n  password: any;\r\n  loading: boolean = false;\r\n  inputType = \"password\";\r\n  visible = false;\r\n  isLoggedIn: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: UntypedFormBuilder,\r\n    private cd: ChangeDetectorRef,\r\n    private snackbar: MatSnackBar,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      email: [\"\", Validators.required],\r\n      password: [\"\", Validators.required],\r\n    });\r\n    if(typeof window !== undefined){\r\n      if(localStorage.getItem(\"jwt\")){\r\n        this.isLoggedIn = true;\r\n        this.router.navigate(['dashboards/analytics']);\r\n      }\r\n    }\r\n  }\r\n\r\n  send() {\r\n    this.userName = this.form.get(\"email\").value;\r\n    this.password = this.form.get(\"password\").value;\r\n    this.loading = true;\r\n    if (this.userName && this.password) {\r\n      this.authService\r\n        .getUser(this.userName, this.password)\r\n        .subscribe((res) => {\r\n          if (res.data) {\r\n            this.loading = false;\r\n            this.snackbar.open(\"Authenticated ! Redirecting...)\", \"\", {duration: 10000,});\r\n             location.href = \"/dashboards/analytics\"\r\n             localStorage.setItem(\"UserId\", res.data.userId)\r\n             localStorage.setItem(\"jwt\", res.data.jwtToken)\r\n          }\r\n          else{\r\n            this.loading = false;\r\n            this.snackbar.open(\"Something Went Wrong)\", \"\", {duration: 5000,});\r\n          }\r\n        });\r\n    }\r\n    // this.router.navigate(['/']);\r\n    // this.snackbar.open('Lucky you! Looks like you didn\\'t need a password or email address! For a real application we provide validators to prevent this. ;)', 'LOL THANKS', {\r\n    //   duration: 10000\r\n    // });\r\n  }\r\n\r\n  redirect():void {\r\n    this.router.navigate(['dashboards/analytics']);\r\n  }\r\n  toggleVisibility() {\r\n    if (this.visible) {\r\n      this.inputType = \"password\";\r\n      this.visible = false;\r\n      this.cd.markForCheck();\r\n    } else {\r\n      this.inputType = \"text\";\r\n      this.visible = true;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n}\r\n","<div class=\"w-full h-full bg-pattern flex flex-col items-center justify-center\">\r\n  <div @fadeInUp class=\"card overflow-hidden w-full max-w-xs\">\r\n    <div class=\"p-6 pb-0 flex flex-col items-center justify-center\">\r\n      <div class=\"fill-current text-center\">\r\n        <img class=\"w-26\" src=\"assets/img/demo/logo.svg\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"text-center mt-4\" *ngIf=\"!isLoggedIn\">\r\n      <h2 class=\"title m-0\">Welcome back</h2>\r\n      <h4 class=\"body-2 text-secondary m-0\">Sign in with your credentials below.</h4>\r\n    </div>\r\n\r\n    <div *ngIf=\"isLoggedIn\" class=\"flex justify-center flex-col gap-2 p-4\">\r\n      <h1 class=\"text-center text-2xl font-bold text-gray-500\">Already Logged In</h1>\r\n      <h2 class=\"text-center text-2xl font-bold text-gray-500\">Redirecting..</h2>\r\n      <button (click)=\"redirect()\" color=\"primary\" mat-raised-button type=\"button\">Dashboard</button>\r\n    </div>\r\n  \r\n    <div [formGroup]=\"form\" class=\"p-6 flex flex-col gap-4\" *ngIf=\"!isLoggedIn\">\r\n      <div class=\"flex flex-col\">\r\n     <mat-form-field class=\"flex-1\">\r\n          <mat-label>E-Mail</mat-label>\r\n          <input formControlName=\"email\" matInput required>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">We need an email address to log you in</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"flex-1\">\r\n          <mat-label>Password</mat-label>\r\n          <input [type]=\"inputType\" formControlName=\"password\" matInput required>\r\n          <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"Toggle Visibility\" type=\"button\">\r\n            <mat-icon *ngIf=\"visible\" svgIcon=\"mat:visibility\"></mat-icon>\r\n            <mat-icon *ngIf=\"!visible\" svgIcon=\"mat:visibility_off\"></mat-icon>\r\n          </button>\r\n          <mat-hint>Click the eye to toggle visibility</mat-hint>\r\n          <mat-error *ngIf=\"form.get('password').hasError('required')\">We need a password to log you in</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"flex items-center justify-between\">\r\n        <mat-checkbox class=\"caption\" color=\"primary\">Remember Me</mat-checkbox>\r\n        <a [routerLink]=\"['/forgot-password']\" class=\"caption\">Forgot Password?</a>\r\n      </div>\r\n\r\n      <button (click)=\"send()\" color=\"primary\" mat-raised-button type=\"button\">\r\n       {{!loading ? \"Sign In\" : \"Loading...\"}}       \r\n      </button>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule\r\n  ]\r\n})\r\nexport class LoginModule {\r\n}\r\n","import { inject, Injectable } from '@angular/core';\nimport { HttpClient , HttpHeaders } from '@angular/common/http';\nimport { environment as env } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient,) {}\n\n  getUser(username: string , password: any) : Observable<any> {\n    return this.http.get<any>(`${env.baseUrl}/Customers/Login?username=${username}&password=${password}`)\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}