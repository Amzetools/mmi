{"version":3,"file":"src_app_pages_user_orders_user-orders_user-orders_module_ts.js","mappings":"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","sources":["./src/app/pages/user/orders/user-orders/user-orders-routing.module.ts","./src/app/pages/user/orders/user-orders/user-orders.component.ts","./src/app/pages/user/orders/user-orders/user-orders.component.html","./src/app/pages/user/orders/user-orders/user-orders.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\nimport { UserOrdersComponent } from './user-orders.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserOrdersComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule, QuicklinkModule]\r\n})\r\nexport class UserOrderRoutingModule {\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { TableColumn } from '../../../../../@vex/interfaces/table-column.interface';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { untilDestroyed } from '@ngneat/until-destroy';\r\nimport { ReplaySubject, Observable, of, filter, map } from 'rxjs';\r\nimport { aioTableLabels, aioTableData } from 'src/static-data/aio-table-data';\r\nimport { CustomerCreateUpdateComponent } from '../../../apps/aio-table/customer-create-update/customer-create-update.component';\r\nimport { Customer } from '../../../apps/aio-table/interfaces/customer.model';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\r\nimport { fadeInUp400ms } from 'src/@vex/animations/fade-in-up.animation';\r\nimport { stagger40ms } from 'src/@vex/animations/stagger.animation';\r\n\r\n\r\n@Component({\r\n  selector: 'vex-user-orders',\r\n  templateUrl: './user-orders.component.html',\r\n  styleUrls: ['./user-orders.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    fadeInUp400ms,\r\n    stagger40ms\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        appearance: 'standard'\r\n      } as MatFormFieldDefaultOptions\r\n    }\r\n  ]\r\n})\r\nexport class UserOrdersComponent  implements OnInit {\r\n\r\n  // Form TS Start\r\n  selectCtrl: UntypedFormControl = new UntypedFormControl();\r\n  // Form TS End\r\n\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n  salesSeries: ApexAxisChartSeries = [{\r\n    name: 'Sales',\r\n    data: [28, 40, 36, 0, 52, 38, 60, 55, 99, 54, 38, 87]\r\n  }];\r\n\r\n  subject$: ReplaySubject<Customer[]> = new ReplaySubject<Customer[]>(1);\r\n  data$: Observable<Customer[]> = this.subject$.asObservable();\r\n  customers: Customer[];\r\n\r\n  @Input()\r\n  columns: TableColumn<Customer>[] = [\r\n    { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\r\n    { label: 'Image', property: 'image', type: 'image', visible: true },\r\n    { label: 'SKU', property: 'sku', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Description', property: 'description', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Category', property: 'category', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Name', property: 'name', type: 'text', visible: false, cssClasses: ['font-medium'] },\r\n    { label: 'First Name', property: 'firstName', type: 'text', visible: false },\r\n    { label: 'Last Name', property: 'lastName', type: 'text', visible: false },\r\n    { label: 'Contact', property: 'contact', type: 'button', visible: false },\r\n    { label: 'Address', property: 'address', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Street', property: 'street', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Zipcode', property: 'zipcode', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'City', property: 'city', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Phone', property: 'phoneNumber', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Labels', property: 'labels', type: 'button', visible: true },\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource: MatTableDataSource<Customer> | null;\r\n  selection = new SelectionModel<Customer>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n  labels = aioTableLabels;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  constructor(private dialog: MatDialog, private cd: ChangeDetectorRef) {\r\n  }\r\n\r\n  get visibleColumns() {\r\n    return this.columns.filter(column => column.visible).map(column => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n  getData() {\r\n    return of(aioTableData.map(customer => new Customer(customer)));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData().subscribe(customers => {\r\n      this.subject$.next(customers);\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(\r\n      filter<Customer[]>(Boolean)\r\n    ).subscribe(customers => {\r\n      this.customers = customers;\r\n      this.dataSource.data = customers;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges.pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(value => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  createCustomer() {\r\n    this.dialog.open(CustomerCreateUpdateComponent).afterClosed().subscribe((customer: Customer) => {\r\n      /**\r\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\r\n       */\r\n      if (customer) {\r\n        /**\r\n         * Here we are updating our local array.\r\n         * You would probably make an HTTP request here.\r\n         */\r\n        this.customers.unshift(new Customer(customer));\r\n        this.subject$.next(this.customers);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateCustomer(customer: Customer) {\r\n    this.dialog.open(CustomerCreateUpdateComponent, {\r\n      data: customer\r\n    }).afterClosed().subscribe(updatedCustomer => {\r\n      /**\r\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\r\n       */\r\n      if (updatedCustomer) {\r\n        /**\r\n         * Here we are updating our local array.\r\n         * You would probably make an HTTP request here.\r\n         */\r\n        const index = this.customers.findIndex((existingCustomer) => existingCustomer.id === updatedCustomer.id);\r\n        this.customers[index] = new Customer(updatedCustomer);\r\n        this.subject$.next(this.customers);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCustomer(customer: Customer) {\r\n    /**\r\n     * Here we are updating our local array.\r\n     * You would probably make an HTTP request here.\r\n     */\r\n    this.customers.splice(this.customers.findIndex((existingCustomer) => existingCustomer.id === customer.id), 1);\r\n    this.selection.deselect(customer);\r\n    this.subject$.next(this.customers);\r\n  }\r\n\r\n  deleteCustomers(customers: Customer[]) {\r\n    /**\r\n     * Here we are updating our local array.\r\n     * You would probably make an HTTP request here.\r\n     */\r\n    customers.forEach(c => this.deleteCustomer(c));\r\n  }\r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column: { visible: boolean; }, event: { stopPropagation: () => void; stopImmediatePropagation: () => void; }) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: Customer) {\r\n    const index = this.customers.findIndex(c => c === row);\r\n    this.customers[index].labels = change.value;\r\n    this.subject$.next(this.customers);\r\n  }\r\n\r\n}\r\nfunction startWith(arg0: string): import(\"rxjs\").OperatorFunction<any, unknown> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","<vex-secondary-toolbar current=\"Ordes\">\r\n  <vex-breadcrumbs [crumbs]=\"['Dashboards', 'Orders']\" class=\"flex-auto\"></vex-breadcrumbs>\r\n\r\n  <button class=\"ml-2\" color=\"primary\" mat-icon-button type=\"button\">\r\n    <mat-icon svgIcon=\"mat:more_vert\"></mat-icon>\r\n  </button>\r\n</vex-secondary-toolbar>\r\n\r\n<div class=\"container p-gutter grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\r\n\r\n  <!-- Form for Orders Start -->\r\n  <div class=\"flex flex-col sm:col-span-full\">\r\n    <div @fadeInUp class=\"card flex-auto\">\r\n      <div class=\"px-6 py-4 border-b flex items-center\">\r\n        <h2 class=\"title m-0\">Order Placement Form</h2>\r\n      </div>\r\n\r\n      <div class=\"px-6 py-4 flex flex-col\">\r\n\r\n        <div class=\"flex flex-col sm:flex-row sm:gap-2\">\r\n          <mat-form-field class=\"w-50\">\r\n            <mat-label>SKU</mat-label>\r\n            <mat-select>\r\n              <mat-option  value=\"001\">001</mat-option>\r\n              <mat-option  value=\"002\">002</mat-option>\r\n              <mat-option  value=\"003\">003</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-50\">\r\n            <mat-label>Product Name</mat-label>\r\n            <mat-select>\r\n              <mat-option  value=\"A\">A</mat-option>\r\n              <mat-option  value=\"B\">B</mat-option>\r\n              <mat-option  value=\"C\">C</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-50\">\r\n            <mat-label>Product Quantity</mat-label>\r\n            <input matInput required>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n\r\n        <div class=\"flex items-center justify-end gap-2\">\r\n          <button color=\"primary\" mat-raised-button type=\"button\">Place Order</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <!-- Form for Orders End -->\r\n\r\n  <!-- Chart Area Start -->\r\n  <vex-widget-large-goal-chart [series]=\"salesSeries\" class=\"sm:col-span-full\" total=\"4,374\">\r\n  </vex-widget-large-goal-chart>\r\n  <!-- Chart Area End -->\r\n\r\n  <div class=\"card sm:col-span-full\">\r\n    <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n      <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n        <span>All Orders</span>\r\n      </h2>\r\n      <div\r\n        class=\"bg-foreground rounded-full border px-4 max-w-[300px] flex-auto flex items-center border border-gray-300\">\r\n        <mat-icon class=\"icon-sm text-secondary\" svgIcon=\"mat:search\"></mat-icon>\r\n        <input [formControl]=\"searchCtrl\" class=\"px-4 py-2 border-0 outline-none w-full bg-transparent\"\r\n          placeholder=\"Search...\" type=\"search\">\r\n      </div>\r\n      <span class=\"flex-1\"></span>\r\n    </div>\r\n\r\n    <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\r\n\r\n      <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n      <!-- Checkbox Column -->\r\n      <ng-container matColumnDef=\"checkbox\">\r\n        <th *matHeaderCellDef mat-header-cell>\r\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\r\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\" color=\"primary\">\r\n          </mat-checkbox>\r\n        </th>\r\n        <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n          <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\r\n            color=\"primary\">\r\n          </mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Image Column -->\r\n      <ng-container matColumnDef=\"image\">\r\n        <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Image</th>\r\n        <td *matCellDef=\"let row\" class=\"w-8 min-w-8 pr-0\" mat-cell>\r\n          <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\">\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Text Columns -->\r\n      <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n        <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n          <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <!-- Contact Column -->\r\n      <ng-container matColumnDef=\"contact\">\r\n        <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n        <td *matCellDef=\"let row\" mat-cell>\r\n          <div class=\"flex\">\r\n            <a class=\"w-8 h-8 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary/10\"\r\n              mat-icon-button>\r\n              <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n            </a>\r\n\r\n            <a class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal-light\"\r\n              mat-icon-button>\r\n              <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n            </a>\r\n\r\n            <a class=\"w-8 h-8 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green-light\"\r\n              mat-icon-button>\r\n              <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n            </a>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Label Column -->\r\n      <ng-container matColumnDef=\"labels\">\r\n        <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Labels</th>\r\n        <td *matCellDef=\"let row\" mat-cell>\r\n          <div class=\"flex items-center gap-1\">\r\n            <div *ngFor=\"let label of row.labels\" [ngClass]=\"[label.textClass, label.bgClass]\"\r\n              class=\"rounded px-2 py-1 font-medium text-xs flex-none\">\r\n              {{ label.text }}\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Action Column -->\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>Options</th>\r\n        <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n          <button [matMenuTriggerData]=\"{ customer: row }\" [matMenuTriggerFor]=\"actionsMenu\" mat-icon-button\r\n            type=\"button\">\r\n            <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n      <tr *matRowDef=\"let row; columns: visibleColumns;\" @fadeInUp class=\"hover:bg-hover trans-ease-out cursor-pointer\"\r\n        mat-row></tr>\r\n      <!--- Note: Will use the below Line to view product details in the above <tr>\" -->\r\n      <!-- (click)=\"updateCustomer(row)\" -->\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\r\n  </div>\r\n\r\n  <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n    <ng-template let-customer=\"customer\" matMenuContent>\r\n      <button mat-menu-item>\r\n        <mat-icon svgIcon=\"mat:find_replace\"></mat-icon>\r\n        <span>View</span>\r\n      </button>\r\n      <button (click)=\"updateCustomer(customer)\" mat-menu-item>\r\n        <mat-icon svgIcon=\"mat:edit\"></mat-icon>\r\n        <span>Release</span>\r\n      </button>\r\n      <button (click)=\"deleteCustomer(customer)\" mat-menu-item>\r\n        <mat-icon svgIcon=\"mat:delete\"></mat-icon>\r\n        <span>Order</span>\r\n      </button>\r\n    </ng-template>\r\n  </mat-menu>\r\n\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserOrderRoutingModule } from './user-orders-routing.module';\r\nimport { UserOrdersComponent } from './user-orders.component';\r\nimport { ChartModule } from '../../../../../@vex/components/chart/chart.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { WidgetQuickLineChartModule } from '../../../../../@vex/components/widgets/widget-quick-line-chart/widget-quick-line-chart.module';\r\nimport {\r\n  WidgetQuickValueCenterModule\r\n} from '../../../../../@vex/components/widgets/widget-quick-value-center/widget-quick-value-center.module';\r\nimport { WidgetQuickValueStartModule } from '../../../../../@vex/components/widgets/widget-quick-value-start/widget-quick-value-start.module';\r\nimport { WidgetLargeGoalChartModule } from '../../../../../@vex/components/widgets/widget-large-goal-chart/widget-large-goal-chart.module';\r\nimport { WidgetAssistantModule } from '../../../../../@vex/components/widgets/widget-assistant/widget-assistant.module';\r\nimport { WidgetLargeChartModule } from '../../../../../@vex/components/widgets/widget-large-chart/widget-large-chart.module';\r\nimport { WidgetTableModule } from '../../../../../@vex/components/widgets/widget-table/widget-table.module';\r\nimport { SecondaryToolbarModule } from '../../../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\r\nimport { BreadcrumbsModule } from '../../../../../@vex/components/breadcrumbs/breadcrumbs.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { PageLayoutModule } from '../../../../../@vex/components/page-layout/page-layout.module';\r\n\r\nimport { AioTableRoutingModule } from '../../../apps/aio-table/aio-table-routing.module';\r\n// import { AioTableComponent } from '../../apps/aio-table/aio-table.component';\r\nimport { CustomerCreateUpdateModule } from '../../../apps/aio-table/customer-create-update/customer-create-update.module';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserOrdersComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserOrderRoutingModule,\r\n    ChartModule,\r\n    MatIconModule,\r\n    WidgetQuickLineChartModule,\r\n    WidgetQuickValueCenterModule,\r\n    WidgetQuickValueStartModule,\r\n    WidgetLargeGoalChartModule,\r\n\r\n    WidgetAssistantModule,\r\n    WidgetLargeChartModule,\r\n    WidgetTableModule,\r\n    SecondaryToolbarModule,\r\n    BreadcrumbsModule,\r\n    MatButtonModule,\r\n    PageLayoutModule,\r\n\r\n    AioTableRoutingModule,\r\n    PageLayoutModule,\r\n    BreadcrumbsModule,\r\n    CustomerCreateUpdateModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n\r\n    FormsModule,\r\n    MatTooltipModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatButtonToggleModule,\r\n\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatSliderModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatSlideToggleModule,\r\n    SecondaryToolbarModule,\r\n    BreadcrumbsModule,\r\n  ]\r\n})\r\nexport class UserOrderModule {\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}